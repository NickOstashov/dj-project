{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nimport _imports_0 from '@/assets/img/search.svg';\nconst _hoisted_1 = {\n  class: \"detail\"\n};\nconst _hoisted_2 = {\n  class: \"detail-search\"\n};\nconst _hoisted_3 = {\n  class: \"container detail-searchh__item\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"problem-title\"\n}, \"Возможные проблемы\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"col-6 problem-search__field\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"#\",\n  class: \"problem-search__field__icon\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_nav_bar = _resolveComponent(\"nav-bar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_nav_bar), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.filters.naming__icontains = $event),\n    class: \"problem-search__field__input\",\n    placeholder: \"Введите запрос\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.filters.naming__icontains]])])])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.faq, i => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i.id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(i.question) + \" \" + _toDisplayString(i.answer), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";OAO6BA,UAA6B;;EALjDC,KAAK,EAAG;AAAQ;;EACZA,KAAK,EAAG;AAAe;;EACnBA,KAAK,EAAG;AAAgC;gCACzCC,oBAAmD;EAA/CD,KAAK,EAAG;AAAe,GAAC,oBAAkB;;EACrCA,KAAK,EAAG;AAA6B;gCACtCC,oBAAiF;EAA5EC,GAA6B,EAA7BH,UAA6B;EAACI,GAAG,EAAC,GAAG;EAACH,KAAK,EAAG;;;;;6DANvEI,aAAUC,qBACVJ,oBAaM,OAbNK,UAaM,GAZFL,oBAQM,OARNM,UAQM,GAPFN,oBAMM,OANNO,UAMM,GALFC,UAAmD,EAC/CR,oBAGM,OAHNS,UAGM,GAFFC,UAAiF,kBACjFV,oBAA8G;+DAA9FW,YAAO,CAACC,iBAAiB;IAAEb,KAAK,EAAC,8BAA8B;IAACc,WAAW,EAAC;iDAA5EF,YAAO,CAACC,iBAAiB,8BAIzDE,oBAEMC,6BAFWC,SAAG,EAARC,CAAC;yBAAbH,oBAEM;MAFiBI,GAAG,EAAED,CAAC,CAACE;QAC1BnB,oBAAoC,6BAA9BiB,CAAC,CAACG,QAAQ,IAAE,GAAC,oBAAEH,CAAC,CAACI,MAAM","names":["_imports_0","class","_createElementVNode","src","alt","_createVNode","_component_nav_bar","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_ctx","naming__icontains","placeholder","_createElementBlock","_Fragment","$data","i","key","id","question","answer"],"sourceRoot":"","sources":["/Users/noone/Desktop/it-dj/dj-project/djsite/psuapp/main-app/src/views/DetailView.vue"],"sourcesContent":["<template>\n    <nav-bar/>\n    <div class = \"detail\">\n        <div class = \"detail-search\">\n            <div class = \"container detail-searchh__item\">\n                <h2 class = \"problem-title\">Возможные проблемы</h2>\n                    <div class = \"col-6 problem-search__field\">\n                        <img src=\"@/assets/img/search.svg\" alt=\"#\" class = \"problem-search__field__icon\">\n                        <input v-model=\"filters.naming__icontains\" class=\"problem-search__field__input\" placeholder=\"Введите запрос\"/>\n                    </div>\n            </div>\n        </div>\n        <div v-for=\"i in faq\" :key=\"i.id\">\n            <h2>{{i.question}} {{i.answer}}</h2>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport {Faq} from \"@/api\"\nimport NavBar from \"@/components/NavBar.vue\"\n\nexport default {\n    name:\"problem-detail\",\n    data(){\n        return {\n            faq:[],\n            title:\"\"\n        }\n    },\n    methods:{\n        async getFaq(){\n        let params ={\n            problem:this.$route.params.id\n        }\n        this.faq = await Faq.objects.filter(params)\n        let title = this.faq[0].problem.naming\n        this.title = title\n        }\n    },\n    mounted(){\n        this.getFaq()\n    },\n    components:{\n        NavBar,\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}