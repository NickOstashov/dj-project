{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_select, {\n    onSearch: $options.getProblem,\n    options: $data.problem_list,\n    leble: \"naming\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('problemChange', _ctx.problem))\n  }, null, 8 /* PROPS */, [\"onSearch\", \"options\"])]);\n}","map":{"version":3,"mappings":";;;uBACIA,oBAEM,cADFC,aAAmIC;IAAxHC,QAAM,EAAIC,mBAAU;IAAGC,OAAO,EAAIC,kBAAY;IAAEC,KAAK,EAAG,QAAQ;IAAE,qBAAiB,sCAAIC,UAAK,kBAAiBA,YAAO","names":["_createElementBlock","_createVNode","_component_v_select","onSearch","$options","options","$data","leble","_ctx"],"sourceRoot":"","sources":["/Users/noone/Desktop/it-dj/dj-project/djsite/psuapp/main-app/src/components/SelectProblem.vue"],"sourcesContent":["<template>\n    <div>\n        <v-select @search = \"getProblem\" :options = \"problem_list\" leble = \"naming\" @update:modelValue = \"$emit('problemChange',problem)\"/>\n    </div>\n</template>\n\n\n<script>\nimport axios from 'axios'\nimport vSelect from 'vue-select'\n\n    export default{\n        name:\"select-problem\",\n        props:['slectProblem'],\n\n        data(){\n            return{\n                problem_list:[],\n                problemNaming:''\n            }\n        },\n        methods:{\n            async getProblem(search){\n                let params = {\n                    naming__icontains: this.search, \n                    problem: this.selectProblem.id\n                }\n                let data = (await axios.get('/api/problem/', {params})).data\n                this.problem_list = data \n            }\n        },\n        components:{\n            vSelect,\n        }\n    }\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}