{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"problem\"\n};\nconst _hoisted_2 = {\n  class: \"problem-search\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"problem-title\"\n}, \"Возможные проблемы\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"col-6\"\n};\nconst _hoisted_5 = {\n  class: \"container\"\n};\nconst _hoisted_6 = {\n  class: \"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\"\n};\nconst _hoisted_7 = {\n  class: \"card h-100 problem-card\"\n};\nconst _hoisted_8 = {\n  class: \"problem-img\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"card-body\"\n};\nconst _hoisted_11 = {\n  class: \"card-title problem-naming\"\n};\nconst _hoisted_12 = {\n  class: \"problem-description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.filters.naming__icontains = $event),\n    class: \"form-control\",\n    placeholder: \"Поиск по названию\",\n    id: \"search\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filters.naming__icontains]])])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.problem_list, pr => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col\",\n      key: pr.id\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"img\", {\n      src: pr.icon,\n      style: {\n        \"max-width\": \"80px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_9)]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"h5\", _hoisted_11, _toDisplayString(pr.naming), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_12, _toDisplayString(pr.description), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"mappings":";;EAEaA,KAAK,EAAG;AAAS;;EACbA,KAAK,EAAG;AAAgB;gCACzBC,oBAAmD;EAA/CD,KAAK,EAAG;AAAe,GAAC,oBAAkB;;EACzCA,KAAK,EAAG;AAAO;;EAInBA,KAAK,EAAG;AAAW;;EACfA,KAAK,EAAE;AAAgD;;EAE/CA,KAAK,EAAG;AAAyB;;EAC7BA,KAAK,EAAG;AAAa;;;EAGrBA,KAAK,EAAG;AAAW;;EAChBA,KAAK,EAAG;AAA2B;;EACpCA,KAAK,EAAE;AAAqB;;uBAjB3DE,oBAwBM,cAvBFD,oBAsBM,OAtBNE,UAsBM,GArBFF,oBAKM,OALNG,UAKM,GAJFC,UAAmD,EACnDJ,oBAEM,OAFNK,UAEM,mBADFL,oBAA+G;+DAA/FM,aAAO,CAACC,iBAAiB;IAAER,KAAK,EAAC,cAAc;IAACS,WAAW,EAAC,mBAAmB;IAACC,EAAE,EAAG;iDAArFH,aAAO,CAACC,iBAAiB,SAGjDP,oBAcM,OAdNU,UAcM,GAbFV,oBAYM,OAZNW,UAYM,sBAXFV,oBAUMW,6BAVyBN,kBAAY,EAAlBO,EAAE;yBAA3BZ,oBAUM;MAVDF,KAAK,EAAE,KAAK;MAA6Be,GAAG,EAAED,EAAE,CAACJ;QAClDT,oBAQM,OARNe,UAQM,GAPFf,oBAEM,OAFNgB,UAEM,GADFhB,oBAA6C;MAAvCiB,GAAG,EAAEJ,EAAE,CAACK,IAAI;MAAEC,KAAwB,EAAxB;QAAA;MAAA;2CAExBnB,oBAGM,OAHNoB,WAGM,GAFFpB,oBAA0D,MAA1DqB,WAA0D,mBAAhBR,EAAE,CAACS,MAAM,kBACnDtB,oBAAsD,KAAtDuB,WAAsD,mBAApBV,EAAE,CAACW,WAAW","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","$data","naming__icontains","placeholder","id","_hoisted_5","_hoisted_6","_Fragment","pr","key","_hoisted_7","_hoisted_8","src","icon","style","_hoisted_10","_hoisted_11","naming","_hoisted_12","description"],"sourceRoot":"","sources":["/Users/noone/Desktop/it-dj/dj-project/djsite/psuapp/main-app/src/components/ProblemComponent.vue"],"sourcesContent":["<template>\n    <div>\n        <div class = \"problem\">\n            <div class = \"problem-search\">\n                <h2 class = \"problem-title\">Возможные проблемы</h2>\n                <div class = \"col-6\">\n                    <input v-model=\"filters.naming__icontains\" class=\"form-control\" placeholder=\"Поиск по названию\" id = \"search\"/>\n                </div>\n            </div>\n            <div class = \"container\">  \n                <div class= \"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">              \n                    <div class= \"col\" v-for=\"pr in problem_list\" :key=\"pr.id\">\n                        <div class = \"card h-100 problem-card\">\n                            <div class = \"problem-img\">\n                                <img :src=\"pr.icon\" style = \"max-width:80px\">\n                            </div>\n                            <div class = \"card-body\">\n                                <h5 class = \"card-title problem-naming\">{{pr.naming}}</h5>\n                                <p class= \"problem-description\">{{pr.description}}</p>\n                            </div>\n                        </div>\n                    </div>        \n                </div>\n            </div>  \n        </div>\n    </div>\n</template>\n\n<script>\nimport {Problem} from '@/api'\n\n\nexport default{\n    name:'problem-component',\n\n    data(){\n        return {\n            filters:{},\n            searchField:'',\n            selectProblem:{},\n            problem_list:[]\n        }\n    },\n\n    watch:{\n        searchFiedl(){\n            this.getProblem()\n        },\n        filters:{\n            deep:true,\n            handler(){\n                this.getProblem()\n            },\n        },\n    },\n\n    methods:{\n\n        async getProblem(){\n            let params = {\n                naming__icontainns:this.searchField,\n                ...this.filters\n            }\n            let data = await Problem.objects.filter(params)\n            this.problem_list = data \n        }\n    },\n\n    mounted(){\n        this.getProblem()\n    },\n\n}\n</script>\n\n<style>\n\n:root{\n    --major-background: #CE1532;\n    --minor-background: #FFC7C7;\n    --hover-card-color: rgba(255, 219, 219, 0.8);\n    --description-text-color: rgb(0,0,0);\n}\n\n.problem{\n    margin-bottom: 100px;\n    width: 100%;\n}\n\n.problem-search{\n    background-color: var(--minor-background);\n    width: 100%;\n    padding: 50px px;\n}\n\n.problem-naming{\n    color: var(--major-background)\n}\n\n.problem-description{\n    color:var(--description-text-color)\n}\n\n.problem-card{\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    flex-direction: row !important;\n    height: 100%;\n}\n\n.problem-card:hover{\n    background-color: var(--hover-card-color)\n}\n\n.card h-100 problem-card{\n    flex-direction: row;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}