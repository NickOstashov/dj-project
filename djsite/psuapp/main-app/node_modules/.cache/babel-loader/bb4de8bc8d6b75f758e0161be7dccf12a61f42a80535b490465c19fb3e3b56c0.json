{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"problem\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"problem-title\"\n}, \"Возможные проблемы\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\"\n};\nconst _hoisted_5 = {\n  class: \"card h-100 problem-card\"\n};\nconst _hoisted_6 = {\n  class: \"problem-img\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"card-body\"\n};\nconst _hoisted_9 = {\n  class: \"card-title problem-naming\"\n};\nconst _hoisted_10 = {\n  class: \"problem-description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_select_problem = _resolveComponent(\"select-problem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createVNode(_component_select_problem, {\n    \"select-problem\": $data.selectProblem,\n    onProblemChange: $options.updateProblem\n  }, null, 8 /* PROPS */, [\"select-problem\", \"onProblemChange\"]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.problem_list, pr => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col\",\n      key: pr.id\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: pr.icon,\n      style: {\n        \"max-width\": \"80px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h5\", _hoisted_9, _toDisplayString(pr.naming), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_10, _toDisplayString(pr.description), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAG;AAAW;;EACfA,KAAK,EAAG;AAAS;gCAClBC,oBAAmD;EAA/CD,KAAK,EAAG;AAAe,GAAC,oBAAkB;;EAEzCA,KAAK,EAAE;AAAgD;;EAE/CA,KAAK,EAAG;AAAyB;;EAC7BA,KAAK,EAAG;AAAa;;;EAGrBA,KAAK,EAAG;AAAW;;EAChBA,KAAK,EAAG;AAA2B;;EACpCA,KAAK,EAAE;AAAqB;;;uBAZvDE,oBAkBM,OAlBNC,UAkBM,GAjBFF,oBAgBM,OAhBNG,UAgBM,GAfFC,UAAmD,EACnDC,aAAoFC;IAAnE,gBAAc,EAAIC,mBAAa;IAAGC,eAAa,EAAIC;kEACpET,oBAYM,OAZNU,UAYM,sBAXFT,oBAUMU,6BAVyBJ,kBAAY,EAAlBK,EAAE;yBAA3BX,oBAUM;MAVDF,KAAK,EAAE,KAAK;MAA6Bc,GAAG,EAAED,EAAE,CAACE;QAClDd,oBAQM,OARNe,UAQM,GAPFf,oBAEM,OAFNgB,UAEM,GADFhB,oBAA6C;MAAvCiB,GAAG,EAAEL,EAAE,CAACM,IAAI;MAAEC,KAAwB,EAAxB;QAAA;MAAA;2CAExBnB,oBAGM,OAHNoB,UAGM,GAFFpB,oBAA0D,MAA1DqB,UAA0D,mBAAhBT,EAAE,CAACU,MAAM,kBACnDtB,oBAAsD,KAAtDuB,WAAsD,mBAApBX,EAAE,CAACY,WAAW","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_select_problem","$data","onProblemChange","$options","_hoisted_4","_Fragment","pr","key","id","_hoisted_5","_hoisted_6","src","icon","style","_hoisted_8","_hoisted_9","naming","_hoisted_10","description"],"sourceRoot":"","sources":["/Users/noone/Desktop/it-dj/dj-project/djsite/psuapp/main-app/src/components/ProblemComponent.vue"],"sourcesContent":["<template>\n    <div class = \"container\">\n        <div class = \"problem\">\n            <h2 class = \"problem-title\">Возможные проблемы</h2>\n            <select-problem :select-problem = \"selectProblem\" @problemChange = \"updateProblem\"/>\n            <div class= \"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">              \n                <div class= \"col\" v-for=\"pr in problem_list\" :key=\"pr.id\">\n                    <div class = \"card h-100 problem-card\">\n                        <div class = \"problem-img\">\n                            <img :src=\"pr.icon\" style = \"max-width:80px\">\n                        </div>\n                        <div class = \"card-body\">\n                            <h5 class = \"card-title problem-naming\">{{pr.naming}}</h5>\n                            <p class= \"problem-description\">{{pr.description}}</p>\n                        </div>\n                    </div>\n                </div>        \n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport SelectProblem from '@/components/SelectProblem.vue'\nimport {Problem} from '@'\n\n\nexport default{\n    name:'problem-component',\n\n    data(){\n        return {\n            searchField: '',\n            selectProblem:{},\n            problem_list:[]\n        }\n    },\n\n    methods:{\n        updateProblem(event){\n            this.selectProblem = event\n        },\n\n        async getProblem(){\n            let params = {\n                problem: this.selectProblem.id\n            }\n            let data = (await axios.get('/api/problem/', {params})).data\n            this.problem_list = data \n        }\n    },\n\n    mounted(){\n        this.getProblem()\n    },\n    components:{\n        SelectProblem,\n    }\n}\n</script>\n\n<style>\n\n.problem{\n    margin: 100px 0;\n}\n\n\n.problem-naming{\n    color: #CE1532;\n}\n\n.problem-description{\n    color:black;\n}\n\n.problem-card{\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    flex-direction: row !important;\n    height: 100%;\n}\n\n.problem-card:hover{\n    background-color: rgba(255, 219, 219, 0.8);\n}\n\n.card h-100 problem-card{\n    flex-direction: row;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}