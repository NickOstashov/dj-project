{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_nav_bar = _resolveComponent(\"nav-bar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_nav_bar), _createElementVNode(\"div\", null, [_hoisted_1, _createTextVNode(\" \" + _toDisplayString($data.title) + \" \", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.faq, i => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i.id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(i.question) + \" \" + _toDisplayString(i.answer), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAGQA,oBAEM;;;;6DAJVC,aAAUC,qBACVF,oBAQM,cAPFG,UAEM,sBACN,oBAAEC,WAAK,IAAE,GACT,wDAEMC,6BAFWD,SAAG,EAARE,CAAC;yBAAbC,oBAEM;MAFiBC,GAAG,EAAEF,CAAC,CAACG;QAC1BT,oBAAoC,6BAA9BM,CAAC,CAACI,QAAQ,IAAE,GAAC,oBAAEJ,CAAC,CAACK,MAAM","names":["_createElementVNode","_createVNode","_component_nav_bar","_hoisted_1","$data","_Fragment","i","_createElementBlock","key","id","question","answer"],"sourceRoot":"","sources":["/Users/noone/Desktop/it-dj/dj-project/djsite/psuapp/main-app/src/views/DetailView.vue"],"sourcesContent":["<template>\n    <nav-bar/>\n    <div>\n        <div>\n            \n        </div>\n        {{title}}\n        <div v-for=\"i in faq\" :key=\"i.id\">\n            <h2>{{i.question}} {{i.answer}}</h2>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport {Faq} from \"@/api\"\nimport NavBar from \"@/components/NavBar.vue\"\n\nexport default {\n    name:\"problem-detail\",\n    data(){\n        return {\n            faq:[],\n            title:\"\"\n        }\n    },\n    methods:{\n        async getFaq(){\n        let params ={\n            problem:this.$route.params.id\n        }\n        this.faq = await Faq.objects.filter(params)\n        let title = this.faq[0].problem.naming\n        this.title = title\n        }\n    },\n    mounted(){\n        this.getFaq()\n    },\n    components:{\n        NavBar,\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}