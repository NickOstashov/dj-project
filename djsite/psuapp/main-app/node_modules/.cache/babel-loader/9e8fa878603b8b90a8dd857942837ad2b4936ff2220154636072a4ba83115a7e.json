{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"home-page-title\"\n}, \"Возможные проблемы\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.problem_list, pr => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: pr.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(pr.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(pr.naming), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(pr.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAAqD;EAAjDC,KAAK,EAAG;AAAiB,GAAC,oBAAkB;;;uBADlDC,oBASM,cARJC,UAAqD,EACrDH,oBAMQ,mCALNE,oBAIKE,6BAJYC,kBAAY,EAAlBC,EAAE;yBAAbJ,oBAIK;MAJ2BK,GAAG,EAAED,EAAE,CAACE;QACtCR,oBAAkB,6BAAZM,EAAE,CAACE,EAAE,kBACXR,oBAAsB,6BAAhBM,EAAE,CAACG,MAAM,kBACfT,oBAA2B,6BAArBM,EAAE,CAACI,WAAW","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_Fragment","$data","pr","key","id","naming","description"],"sourceRoot":"","sources":["/Users/noone/Desktop/it-dj/dj-project/djsite/psuapp/main-app/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h2 class = \"home-page-title\">Возможные проблемы</h2>\n    <table>\n      <tr v-for=\"pr in problem_list\" :key=\"pr.id\">\n        <td>{{pr.id}}</td>\n        <td>{{pr.naming}}</td>\n        <td>{{pr.description}}</td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'App',\n    data(){\n      return {\n          problem_list:[]\n      }\n    },\n    methods:{\n      async getProblem(){\n        let params = {}\n        let data = (await axios.get('/api/problem/', {params})).data\n        this.problem_list = data \n      }\n    },\n    components: {\n    \n    }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}